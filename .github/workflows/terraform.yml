name: Terraform CI/CD
on:
  workflow_dispatch:
  push:
    branches:
      - develop
      - qa
      - staging
      - prod
    paths-ignore:
      - ".images/**"
  pull_request:
    branches:
      - develop
      - qa
      - staging
      - prod
      - "feature/**"
      - "hotfix/**"
      - "bugfix/**"
    paths-ignore:
      - ".images/**"

jobs:
  set_environment:
    env:
      BRANCH_NAME: ${{ github.base_ref || github.ref_name }}
    outputs:
      stage: ${{ steps.check_environment.outputs.stage }}
      aws_key: ${{ steps.check_environment.outputs.aws_key }}
      aws_key_secret: ${{ steps.check_environment.outputs.aws_key_secret }}
    runs-on: ubuntu-latest
    steps:
    - id: check_environment
      run: |
        echo "::set-output name=stage::${{ env.BRANCH_NAME }}"

        if [[ env.BRANCH_NAME != 'production' ]]; then
          echo "::set-output name=aws_key::NONPROD_AWS_ACCESS_KEY_ID"
          echo "::set-output name=aws_key_secret::NONPROD_AWS_SECRET_ACCESS_KEY"
        else
          echo "::set-output name=aws_key::AWS_ACCESS_KEY_ID"
          echo "::set-output name=aws_key_secret::AWS_SECRET_ACCESS_KEY"
        fi
  terraform:
    runs-on: ubuntu-latest
    needs: set_environment
    # environment: 
    #   name: ${{ needs.set_environment.outputs.stage }}
    env:
      STAGE: ${{ needs.set_environment.outputs.stage }}
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: install dependencies
        run: |
          sudo apt update && sudo apt install python3-pip python3-setuptools jq
          sudo pip3 install terraenv awscli
          sudo terraenv terraform install
          sudo terraenv terragrunt install
      # - name: Setup tmate session
      #   uses: mxschmitt/action-tmate@v3
      # - name: Configure AWS Credentials
      #   uses: aws-actions/configure-aws-credentials@v1
      #   with:
      #     aws-access-key-id: ${{ secrets[needs.set_environment.outputs.aws_key] }}
      #     aws-secret-access-key: ${{ secrets[needs.set_environment.outputs.aws_key_secret] }}"
      #     aws-region: us-east-1
      - name: set aws credentials
        run: |
          export AWS_ACCESS_KEY_ID=${{ secrets[needs.set_environment.outputs.aws_key] }}
          export AWS_SECRET_ACCESS_KEY=${{ secrets[needs.set_environment.outputs.aws_key_secret] }}"
      - name: validate terraform
        if: ${{ github.event_name == 'pull_request' }}
        run: |
          printenv | grep AWS
          set -e
          sudo make fmt-check
          sudo make init validate-terraform
      - name: plan
        if: ${{ github.event_name == 'pull_request' }}
        run: |
          set -e
          sudo make plan
      - name: apply
        if: ${{ github.event_name == 'push' }}
        run: |
          set -e
          sudo make apply-ci
